jobs:
  managed:
    runs-on: windows-latest
    steps:
      - id: fixed_workspace
        name: Fix path
        run: |
          echo out=$("${{github.workspace}}" -Replace "\\","/") | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - uses: humbletim/vsdevenv-shell@v2
      - name: Install dotnet-coverage
        run: dotnet tool install --global dotnet-coverage
        shell: vsdevenv x64 powershell {0}
      - name: Configure
        run: >-
          cmake -B ${{steps.fixed_workspace.outputs.out}}/build
          --install-prefix ${{steps.fixed_workspace.outputs.out}}/build/prefix
          -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -DBUILD_CSharp_TESTS=ON
        shell: vsdevenv x64 powershell {0}
      - name: Build
        run: >-
          msbuild ${{steps.fixed_workspace.outputs.out}}/build/ALL_BUILD.vcxproj /restore
          /p:Configuration=${{matrix.build-type}} /p:platform=x64 /v:n
        shell: vsdevenv x64 powershell {0}
      - name: Run tests
        run: >-
          dotnet-coverage collect --nologo -o cobertura.xml --output-format cobertura
          ctest --test-dir ${{steps.fixed_workspace.outputs.out}}/build/tests
          --output-on-failure -C ${{matrix.build-type}}
        shell: vsdevenv x64 powershell {0}
      - if: matrix.build-type == 'Debug'
        name: Coveralls
        uses: coverallsapp/github-action@v2
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
  native:
    runs-on: windows-latest
    steps:
      - id: fixed_workspace
        name: Fix path
        run: |
          echo out=$("${{github.workspace}}" -Replace "\\","/") | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
      - uses: msys2/setup-msys2@v2
        with:
          install: >-
            make
          msystem: MINGW64
          pacboy: >-
            cmake:p
            cmocka:p
            graphviz:p
            lcov:p
            ninja:p
            toolchain:p
          update: true
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Configure
        run: >-
          cmake -G Ninja -B ${{steps.fixed_workspace.outputs.out}}/build
          --install-prefix ${{steps.fixed_workspace.outputs.out}}/build/prefix
          -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -DBUILD_TESTS=ON
          -DENABLE_COVERAGE=ON
        shell: msys2 {0}
      - name: Build
        run: cmake --build ${{steps.fixed_workspace.outputs.out}}/build --verbose --config ${{matrix.build-type}}
        shell: msys2 {0}
      - name: Run tests
        run: ctest --test-dir ${{steps.fixed_workspace.outputs.out}}/build/native/tests --verbose -C ${{matrix.build-type}}
        shell: msys2 {0}
      - name: Generate coverage information
        run: >-
          lcov --capture --directory ${{steps.fixed_workspace.outputs.out}}/build
          --exclude 'D:/*'
          --output-file coverage.lcov
        shell: msys2 {0}
      - if: matrix.build-type == 'Debug'
        name: Coveralls
        uses: coverallsapp/github-action@v2
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, Release]
  asan-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Install tools
        run: sudo apt-get update -y && sudo apt-get install -y libcmocka-dev
      - name: Configure
        run: >-
          cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}}
          -DBUILD_TESTS=ON -DENABLE_ASAN=ON -DENABLE_UBSAN=ON
      - name: Build
        run: cmake --build ${{github.workspace}}/build --verbose
      - name: Run tests
        run: ctest --test-dir ${{github.workspace}}/build/native/tests --verbose
    strategy:
      fail-fast: false
      matrix:
        build-type: [Debug, RelWithDebInfo]
name: Tests
'on':
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
permissions:
  contents: 'read'
